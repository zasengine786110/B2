function percentage = probitToPercentage(probitInput)
    % probitToPercentage Convert probit value to percentage.
    %
    % This function takes a probit value as input and returns the corresponding
    % percentage value based on predefined RISK ANALYSIS tables of probit values and their
    % corresponding percentages.
    %
    probitValues = [NaN, 2.67, 2.95, 3.12, 3.25, 3.36, 3.45, 3.52, 3.59, 3.66, ...
                    3.72, 3.77, 3.82, 3.87, 3.92, 3.96, 4.01, 4.05, 4.08, 4.12, ...
                    4.16, 4.19, 4.23, 4.26, 4.29, 4.33, 4.36, 4.39, 4.42, 4.45, ...
                    4.48, 4.5, 4.53, 4.56, 4.59, 4.61, 4.64, 4.67, 4.69, 4.72, ...
                    4.75, 4.77, 4.8, 4.82, 4.85, 4.87, 4.9, 4.92, 4.95, 4.97, ...
                    4.99, 5.03, 5.05, 5.08, 5.1, 5.13, 5.15, 5.18, 5.2, 5.23, ...
                    5.25, 5.28, 5.31, 5.33, 5.36, 5.39, 5.41, 5.44, 5.47, 5.5, ...
                    5.52, 5.55, 5.58, 5.61, 5.64, 5.67, 5.71, 5.74, 5.77, 5.81, ...
                    5.84, 5.88, 5.92, 5.95, 5.99, 6.04, 6.09, 6.13, 6.18, 6.23, ...
                    6.28, 6.34, 6.41, 6.48, 6.55, 6.64, 6.75, 6.88, 7.05, 7.33, 7.37, 7.41, 7.46, 7.51, 7.65, 7.75, 7.88, 8.09];
                
    percentageValues = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, ...
                        10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...
                        20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ...
                        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ...
                        40, 41, 42, 43, 44, 45, 46, 47, 48, 49, ...
                        50, 51, 52, 53, 54, 55, 56, 57, 58, 59, ...
                        60, 61, 62, 63, 64, 65, 66, 67, 68, 69, ...
                        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ...
                        80, 81, 82, 83, 84, 85, 86, 87, 88, 89, ...
                        90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 99.1, 99.2, 99.3, 99.4, 99.5, 99.6, 99.7, 99.8, 99.9];
                    
    % Handle cases where the input is outside the range
    if probitInput < min(probitValues)
        percentage = percentageValues(1);
        return;
    elseif probitInput > max(probitValues)
        percentage = percentageValues(end);
        return;
    end
    
    % Find the closest probit value using interpolation
    [~, index] = min(abs(probitValues - probitInput));
    
    % Return the corresponding percentage
    percentage = percentageValues(index);
end
